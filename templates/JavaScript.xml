<templateSet group="JavaScript">
  <template name="me" value="module.exports.$END$ = ;" description="module.exports. ... = ...;" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="func" value="function $END$() {&#10;    &#10;}" description="Inserts function expression" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_EXPRESSION" value="false" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="us" value="&quot;use strict&quot;;&#10;$END$" description="Inserts 'use strict' statement" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rc6" value="import React, {Component, PropTypes} from 'react';&#10;import {connect}  from 'react-redux';&#10;&#10;@connect(state =&gt; {&#10;    return {&#10;    };&#10;})&#10;export default class $END$ extends Component {&#10;&#10;    static propTypes = {&#10;    }&#10;&#10;    static defaultProps = {&#10;    }&#10;&#10;    static contextTypes = {&#10;    }&#10;&#10;    static childContextTypes = {&#10;    }&#10;&#10;    constructor(...args) {&#10;        super(...args);&#10;        this.state = {&#10;        };&#10;    }&#10;&#10;    getChildContext() {&#10;        return {&#10;        };&#10;    }&#10;&#10;    componentWillMount() {&#10;    }&#10;&#10;    componentDidMount() {&#10;    }&#10;&#10;    componentWillReceiveProps(nextProps) {&#10;    }&#10;&#10;    shouldComponentUpdate(nextProps, nextState) {&#10;        return true;&#10;    }&#10;&#10;    componentWillUpdate() {&#10;    }&#10;&#10;    componentDidUpdate() {&#10;    }&#10;&#10;    componentWillUnmount() {&#10;    }&#10;&#10;    render() {&#10;    }&#10;&#10;}" description="React Component ES6" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
      <option name="TypeScript" value="false" />
    </context>
  </template>
</templateSet>